---
- hosts: aci
  gather_facts: yes
  connection: network_cli
  become: yes
  become_method: enable
  ignore_errors: yes

  tasks:
  - name: account $USER
    shell: "echo $USER"
    register: play_user
    changed_when: false
    check_mode: no

  - debug:
      msg: "Running as '{{ play_user.stdout }}'"

  - name: obtain login credentials
    include_vars: "auth/secrets.yml"

  - name: Set Username and Password
    set_fact:
      username: "{{ lab_creds['username'] }}"
      password: "{{ lab_creds['password'] }}"

  - name: new variable with current date time
    set_fact: time_stamp="{{lookup('pipe','date \"+%m-%d-%Y_%H%M\"')}}"

  - name: Set reference var
    set_fact:
      reference: "{{ time_stamp }}_{{ play_user.stdout }}"

  - name: Load APIC Variable File
    include_vars: hostvars/cisco/aci/{{ inventory_hostname }}.yml"

  - name: Pre-Build Snapshot Task
    aci_config_snapshot:
      host: "{{ aci_apic.ipv4 }}"
      username: "{{ username }}"
      password: "{{ password }}"
      validate_certs: no
      state: present
      export_policy: AnsibleACI_SimpleOpsBuild-{{ inventory_hostname }}-{{ reference }}
    delegate_to: localhost
    register: result_snapshot
    when: (continue_build.user_input == "y")

  - name: AP Task
    aci_ap:
      host: "{{ aci_apic.ipv4 }}"
      username: "{{ username }}"
      password: "{{ password }}"
      validate_certs: no
      tenant: "{{ item.tenant }}"
      ap: "{{ item.name }}"
      description: "{{ reference }}"
      state: "{{ item.state }}"
    delegate_to: localhost
    register: result_ap
    when: (item.state == "present" or item.state == "absent" or item.state == "query")
    with_items:
      - "{{ aps }}"

  - name: BD Task
    aci_bd:
      host: "{{ aci_apic.ipv4 }}"
      username: "{{ username }}"
      password: "{{ password }}"
      validate_certs: no
      tenant: "{{ item.tenant}}"
      vrf: "{{ item.vrf}}"
      bd: "{{ item.name }}"
      description: "{{ reference }}"
      bd_type: "{{ item.bd_type }}"
      enable_routing: "{{ item.enable_routing }}"
      enable_multicast: "{{ item.enable_multicast }}"
      state: "{{ item.state }}"
    delegate_to: localhost
    register: result_bd
    when: (item.state == "present" or item.state == "absent" or item.state == "query")
    with_items:
      - "{{ bds }}"

  - name: BD Subnet Task
    aci_bd_subnet:
      host: "{{ aci_apic.ipv4 }}"
      username: "{{ username }}"
      password: "{{ password }}"
      validate_certs: no
      tenant: "{{ item.tenant }}"
      bd: "{{ item.bd }}"
      subnet_name: "{{ item.subnet_name }}"
      description: "{{ reference }}"
      gateway: "{{ item.gateway }}"
      mask: "{{ item.mask }}"
      scope: "{{ item.scope}}"
      state: "{{ item.state }}"
    delegate_to: localhost
    register: result_bd_subnet
    when: (item.state == "present" or item.state == "absent" or item.state == "query")
    with_items:
      - "{{ bd_subnets }}"

  - name: EPG Task
    aci_epg:
      host: "{{ aci_apic.ipv4 }}"
      username: "{{ username }}"
      password: "{{ password }}"
      validate_certs: no
      tenant: "{{ item.tenant }}"
      bd: "{{ item.bd }}"
      ap: "{{ item.ap}}"
      epg: "{{ item.name }}"
      description: "{{ reference }}"
      state: "{{ item.state }}"
    delegate_to: localhost
    register: result_epg
    when: (item.state == "present" or item.state == "absent" or item.state == "query")
    with_items:
      - "{{ epgs }}"

  - name: Generate Output File
    template:
      src=template/simple_ops_build_output.j2
      dest=output/build_output/ACI-Info-{{ time_stamp }}SimpleOpsBuild-{{ aci_apic.hostname }}.yml
    when: (infoblox_update.user_input == "n")

  - name: Change current present states to ignore
    replace:
      path: hostvars/cisco/aci/{{ inventory_hostname }}.yml"
      regexp: 'state: present'
      replace: 'state: ignore'
      after: 'aps:'

  - name: Change current absent states to ignore
    replace:
      path: hostvars/cisco/aci/{{ inventory_hostname }}.yml"
      regexp: 'state: absent'
      replace: 'state: ignore'
      after: 'aps:'

  - name: Change current query states to ignore
    replace:
      path: hostvars/cisco/aci/{{ inventory_hostname }}.yml"
      regexp: 'state: query'
      replace: 'state: ignore'
      after: 'aps:'

  - name: Email Report Recipient(s).
    pause:
      prompt: "Email Playbook Report? (y/n)"
      echo: yes
    register: mail_prompt

  - name: Email Report Recipient(s).
    pause:
      prompt: "Target Email Address(es). Separate multiple addresses by commas"
      echo: yes
    register: mail_recipient
    when: (mail_prompt.user_input == "y")

  - name: Sending Playbook Build Output File
    mail:
      host: 172.16.0.1
      port: 25
      from: ansible-do-not-reply@example.com
      subject: ACI_OpsBuild_Report_{{ inventory_hostname }}
      body: "See atached report"
      attach: "output/build_output/ACI-Info-{{ time_stamp }}OpsBuild-{{ aci_apic.hostname }}.yml"
      to: "{{ mail_recipient }}"
    when: (mail_prompt.user_input == "y") and
          (mail_recipient is defined)

  - name: Cleanup CSV File
    file:
      path: input/simple-{{ reference }}.csv
      state: absent
      
  - name: Clean Playbook Build Output File
    file:
      path: output/build_output/ACI-Info-{{ time_stamp }}SimpleOpsBuild-{{ aci_apic.hostname }}.yml
      state: absent
...